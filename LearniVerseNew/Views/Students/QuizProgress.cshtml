@model LearniVerseNew.Models.ApplicationModels.ViewModels.ProgressViewModel

@{
    ViewBag.Title = "Quiz Progress";
}

<div class="container mt-5">
    <h2 class="text-center">Progress</h2>
    <div class="row mb-4">
        <div class="col-md-6">
            <p><strong>Highest Mark:</strong> @Model.HighestMark</p>
        </div>
        <div class="col-md-6">
            <p><strong>Average Mark:</strong> @Model.AverageMark</p>
        </div>
    </div>

    <div class="row mb-4">
        <div class="col-md-12">
            <canvas id="progressChart"></canvas>
        </div>
    </div>

    <table class="table table-bordered">
        <thead>
            <tr>
                <th>Quiz Description</th>
                <th>Attempt Date</th>
                <th>Mark Obtained</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var attempt in Model.QuizAttempts)
            {
                <tr>
                    <td>@attempt.Quiz.QuizDescription</td>
                    <td>@attempt.AttemptDate.ToString("yyyy-MM-dd")</td>
                    <td>@attempt.MarkObtained</td>
                </tr>
            }
        </tbody>
    </table>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
    document.addEventListener('DOMContentLoaded', function () {
        var ctx = document.getElementById('progressChart').getContext('2d');

        var quizDescriptions = @Html.Raw(Json.Encode(Model.QuizAttempts.Select(qa => qa.Quiz.QuizDescription)));
        var quizMarks = @Html.Raw(Json.Encode(Model.QuizAttempts.Select(qa => qa.MarkObtained)));
        var averageQuizMark = @Html.Raw(Json.Encode(Model.AverageMark));

        var submissionDescriptions = @Html.Raw(Json.Encode(Model.Submissions.Select(s => s.Assignment.Description)));
        var submissionMarks = @Html.Raw(Json.Encode(Model.Submissions.Select(s => s.Mark)));
        var averageSubmissionMark = @Html.Raw(Json.Encode(Model.AverageSubmissionMark));

        var averageQuizLineData = Array(quizDescriptions.length).fill(averageQuizMark);
        var averageSubmissionLineData = Array(submissionDescriptions.length).fill(averageSubmissionMark);

        var progressChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: [...quizDescriptions, ...submissionDescriptions],
                datasets: [
                    {
                        label: 'Quiz Marks',
                        data: [...quizMarks, ...submissionMarks],
                        borderColor: 'rgba(75, 192, 192, 1)',
                        backgroundColor: 'rgba(75, 192, 192, 0.2)',
                        fill: true
                    },
                    {
                        label: 'Average Quiz Mark',
                        data: [...averageQuizLineData, NaN], // NaN to separate quiz and submission lines
                        borderColor: 'rgba(255, 99, 132, 1)',
                        backgroundColor: 'rgba(255, 99, 132, 0.2)',
                        borderDash: [10, 5],
                        fill: false
                    },
                    {
                        label: 'Average Submission Mark',
                        data: [NaN, ...averageSubmissionLineData], // NaN to separate quiz and submission lines
                        borderColor: 'rgba(54, 162, 235, 1)',
                        backgroundColor: 'rgba(54, 162, 235, 0.2)',
                        borderDash: [10, 5],
                        fill: false
                    }
                ]
            },
            options: {
                scales: {
                    x: {
                        title: {
                            display: true,
                            text: 'Quiz / Submission'
                        }
                    },
                    y: {
                        title: {
                            display: true,
                            text: 'Marks'
                        },
                        beginAtZero: true
                    }
                }
            }
        });
    });
    </script>

}
