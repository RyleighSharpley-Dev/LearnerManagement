@model LearniVerseNew.Models.ApplicationModels.Student

@{
    ViewBag.Title = "Dashboard";
}

<div class="container mt-5">
    <div class="row">
        <div class="col-md-12 mb-4">
            <div class="card shadow-sm">
                <div class="card-body text-center">
                    <h2 class="card-title">Welcome to Your Dashboard</h2>
                    <p><strong>@(Model?.StudentFirstName ?? "Unknown") @(Model?.StudentLastName ?? "User")</strong></p>
                </div>
            </div>
        </div>

        <div class="col-md-12 mb-4">
            <div class="card shadow-sm">
                <h1 class="card-header text-center">Calendar</h1>
                <h4 class="card-header lead text-center">View past and upcoming events on the calendar</h4>
                <div class="card-body text-center">
                    <div id="calendar-container">
                        <div id="calendar"></div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-6 mb-4">
            <div class="card shadow-sm">
                <div class="card-body text-center">
                    <i class="fas fa-list-alt fa-3x mb-3 text-primary"></i>
                    <h3 class="card-title">Enrollments</h3>
                    <p class="card-text">View your current enrollments and their status.</p>
                    <a href="@Url.Action("MyEnrollments", "Enrollments")" class="btn btn-primary">View Enrollments</a>
                </div>
            </div>
        </div>

        <div class="col-md-6 mb-4">
            <div class="card shadow-sm">
                <div class="card-body text-center">
                    <i class="fas fa-credit-card fa-3x mb-3 text-danger"></i>
                    <h3 class="card-title">Payments</h3>
                    <p class="card-text">View your payment history and status.</p>
                    <a href="@Url.Action("MyPayments", "Payments")" class="btn btn-primary">View Payments</a>
                </div>
            </div>
        </div>

    </div>

    @{
        var currentEnrollment = Model?.Enrollments?.FirstOrDefault(e => e.EnrollmentDate.Year == DateTime.Now.Year);
    }

    @if (currentEnrollment != null)
    {
        if (!currentEnrollment.HasPaid)
        {
            <div class="alert alert-warning mt-4" role="alert">
                You haven't made the payment for your enrollment. Please proceed to make the payment.
            </div>
            using (Html.BeginForm("Pay", "Enrollments", new { enrollmentId = currentEnrollment.EnrollmentID }, FormMethod.Post))
            {
                @Html.AntiForgeryToken()
                <input type="submit" value="Pay Now" class="btn btn-success mt-2" />
            }
        }
        else
        {
            <h3 class="mt-5">My Courses @currentEnrollment.EnrollmentDate.Year</h3>

            <div id="courseCarousel" class="carousel slide mt-4" data-bs-ride="carousel">
                <div class="carousel-inner">
                    @for (var i = 0; i < currentEnrollment.Courses.Count; i += 3)
                    {
                        <div class="carousel-item @if (i == 0) { <text>active</text> }">
                            <div class="row">
                                @foreach (var course in currentEnrollment.Courses.Skip(i).Take(3))
                                {
                                    <div class="col-md-4">
                                        <div class="card mb-4 shadow-sm">
                                            <div class="card-body text-center">
                                                <h5 class="card-title">@course.CourseName</h5>
                                                <p class="card-text">@course.Description</p>
                                                <a href="@Url.Action("Classroom", "Courses", new { courseId = course.CourseID })" class="btn btn-primary">View Course</a>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    }
                </div>
                <a class="carousel-control-prev" href="#courseCarousel" role="button" data-bs-slide="prev">
                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                    <span class="sr-only">Previous</span>
                </a>
                <a class="carousel-control-next" href="#courseCarousel" role="button" data-bs-slide="next">
                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                    <span class="sr-only">Next</span>
                </a>
            </div>
        }
    } 
    else
    {
        <p>No current enrollment found.</p>
    }
    

    <div class="col-md-12 mb-4">
        <div class="card shadow-sm">
            <h1 class="card-header mb-5">Insights</h1>
            <div class="card-body text-center">
                <h3 class="card-title">Study Sessions Completed</h3>
                <!-- Canvas for the chart -->
                <canvas id="completionChart" width="400" height="200"></canvas>
            </div>
        </div>
    </div>
</div>

<style>
    #calendar-container {
        display: flex;
        justify-content: center;
        align-items: center;
    }

    #calendar {
        max-width: 900px;
        width: 100%;
    }
</style>


@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")
@Scripts.Render("~/bundles/bootstrap")
@Scripts.Render("~/bundles/modernizr")
@Styles.Render("~/Content/css")

<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.7.0/chart.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.4/index.global.min.js"></script>


<script>
    $(document).ready(function () {
        $('#courseCarousel').carousel();
    });

    $(document).ready(function () {
        // Gather data for the chart
        var completedStudySessions = @Html.Raw(ViewBag.CompletedStudySessions);

        // Extract dates and counts
        var labels = completedStudySessions.map(item => item.Date);
        var data = completedStudySessions.map(item => item.Count);

        // Render the chart
        var ctx = document.getElementById('completionChart').getContext('2d');
        var myChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: labels,
                datasets: [{
                    label: 'Completed Study Sessions',
                    data: data,
                    backgroundColor: 'rgba(54, 162, 235, 0.2)',
                    borderColor: 'rgba(54, 162, 235, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });

       // Initialize FullCalendar

    });

    document.addEventListener('DOMContentLoaded', function () {
    var calendarEl = document.getElementById('calendar');
    if (calendarEl) {
        var calendar = new FullCalendar.Calendar(calendarEl, {
            initialView: 'dayGridMonth',
            events: {
                url: '/Students/GetEvents',
                method: 'GET',
                failure: function () {
                    alert('There was an error while fetching events!');
                },
                success: function (data) {
                    console.log(data)
                    // Always render the calendar, even if there are no events
                    calendar.render(data);
                }
            }
        });

        // Initial render outside of success callback
        calendar.render();
    } else {
        console.error('Element with ID "calendar" not found.');
    }
});


</script>
