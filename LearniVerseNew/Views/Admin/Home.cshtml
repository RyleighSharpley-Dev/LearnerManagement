@model LearniVerseNew.Models.ApplicationModels.ViewModels.AdminViewModel
@{
    ViewBag.Title = "Dashboard";
}

<div class="container mt-5">
    <div class="row">
        <div class="col-md-12 mb-4">
            <div class="card shadow-sm">
                <div class="card-body text-center">
                    <h2 class="card-title">Welcome to Your Dashboard</h2>
                    <p>Hi Admin!</p>
                </div>
            </div>
        </div>

        <div class="col-md-4 mb-4">
            <div class="card shadow-sm">
                <div class="card-body text-center">
                    <h3 class="card-title">Total Students</h3>
                    <div class="card-text">@Model.StudentCount</div>
                </div>
            </div>
        </div>

        <div class="col-md-4 mb-4">
            <div class="card shadow-sm">
                <div class="card-body text-center">
                    <h3 class="card-title">Total Teachers</h3>
                    <div class="card-text">@Model.TeacherCount</div>
                </div>
            </div>
        </div>

        <div class="col-md-4 mb-4">
            <div class="card shadow-sm">
                <div class="card-body text-center">
                    <h3 class="card-title">Total Courses</h3>
                    <div class="card-text">@Model.CourseCount</div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="border-bottom shadow-sm mb-2">
            <h1>
                Revenue Insights
            </h1>
        </div>

        <div class="col-md-8">
            <canvas id="moneyReceivedChart" width="400" height="200"></canvas>
        </div>

        <div class="col-md-4">
            <canvas id="percentageChart" width="400" height="200"></canvas>
        </div>

        <div class="col-md-2">
            @Html.ActionLink("View Payments", "Index", "Payments", null, new { @class = "btn btn-danger" })
        </div>
    </div>
</div>




@section Scripts{
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    <script>
        var payments = @Html.Raw(Model.JsonPayments);

        var monthlyTotals = {};

        payments.forEach(function (payment) {
            var date = new Date(payment.PaymentDate);
            var monthYear = date.toLocaleString('default', { month: 'short', year: 'numeric' });
            var amount = payment.AmountPaid;

            // If the monthYear key doesn't exist in monthlyTotals, create it and set the total to 0
            if (!monthlyTotals[monthYear]) {
                monthlyTotals[monthYear] = 0;
            }

            // Add the amount to the total for the corresponding monthYear
            monthlyTotals[monthYear] += amount;
        });


        // Extract month labels and total amounts from the monthlyTotals object
        var labels = Object.keys(monthlyTotals);
        var data = Object.values(monthlyTotals);

        var ctx = document.getElementById('moneyReceivedChart').getContext('2d');

        var moneyReceivedChart = new Chart(ctx, {
            type: 'bar', // Change the chart type to 'bar'
            data: {
                labels: labels,
                datasets: [{
                    label: 'Total Revenue', // Update the label
                    data: data,
                    backgroundColor: 'rgba(255, 205, 86, 0.2)', // Yellow color
                    borderColor: 'rgba(255, 205, 86, 1)', // Yellow color
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true,

                        ticks: {
                            stepSize: 1000 
                        }
                    }
                }
            }
        });

        var totalRevenue = data.reduce((acc, val) => acc + val, 0);

        // Calculate the percentage contribution of each month to the total revenue
        var percentages = data.map(amount => (amount / totalRevenue) * 100);

        var pieCtx = document.getElementById('percentageChart').getContext('2d');

        var percentageChart = new Chart(pieCtx, {
            type: 'pie',
            data: {
                labels: labels,
                datasets: [{
                    label: 'Percentage of Total Revenue',
                    data: percentages,
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(255, 205, 86, 0.2)',
                        'rgba(75, 192, 192, 0.2)',
                        'rgba(153, 102, 255, 0.2)',
                        'rgba(255, 159, 64, 0.2)'

                    ],
                    borderColor: [
                        'rgba(255, 99, 132, 1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 205, 86, 1)',
                        'rgba(75, 192, 192, 1)',
                        'rgba(153, 102, 255, 1)',
                        'rgba(255, 159, 64, 1)'

                    ],
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });


    </script>

}
